!function(){"use strict";var t={cardTemplateSelector:"#destinations__item-template",cardSelector:".destinations__item",cardNameSelector:".destination__name",cardImageSelector:".destination__photo",likeButtonSelector:".button_action_like",likeButtonIconSelector:".button_action_like .button__icon",likeCounterSelector:".like .like__counter",deleteButtonSelector:".button_action_delete",deleteButtonIconSelector:"button_action_delete .button__icon",popUpTemplateSelector:"#destination-popup-template",popUpSelector:".destination-popup",popUpPhotoSelector:".destination-popup__photo",popUpDescSelector:".destination-popup__description",notLikedButtonClass:"button__icon_action_like",isLikedButtonClass:"button__icon_action_liked",likedStatus:"liked",unlikedStatus:"unliked"},e={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".button_location_form",inactiveButtonClass:"button_status_inactive",inputErrorClass:"form__input_status_error",errorClass:"form__input-error"},n={formTemplateSelector:"#form-template",formSelector:".form",formTitleSelector:".form__title",formButtonSelector:".button",formInputTemplateSelector:"#form__input-template",formInputSetSelector:".form__input-set",formInputSelector:".form__input",formInputsAreaSelector:".form__inputs",submitLoadingClass:"button_status_loading"},o={inputTemplateSelector:"#form__input-template",inputSetSelector:".form__input-set",inputSelector:".form__input"},i={popupTemplateSelector:"#popup-template",popupSelector:".popup",popupContentSelector:".popup__content",popupBackdropSelector:".popup__backdrop",popupCloseButtonSelector:".button__icon_action_close",popupModifierFormClass:"popup__content_type_form",popupModifierImageClass:"popup__content_type_image",popupClosedStateClass:"popup_state_closed",popupOpenedStateClass:"popup_state_opened",popupClosingTimeInMs:"300",formClass:"form"},r=".profile__avatar",u=".profile__name",a=".profile__occupation",l=".popup",s="append",c="https://around.nomoreparties.co/v1/web_es_10",p="/users/me",f="/cards",h="/cards/likes",m="PATCH",_="DELETE",y=document.querySelector(".page"),d={type:"url",name:"avatarUrl",placeholder:"Enlace a la imagen",isRequired:!0,maxlength:500,minlength:null},v={type:"text",name:"name",placeholder:"Nombre",isRequired:!0,maxlength:40,minlength:2},b={type:"text",name:"aboutMe",placeholder:"Acerca de mí",isRequired:!0,maxlength:200,minlength:2},g={type:"text",name:"title",placeholder:"Título",isRequired:!0,maxlength:30,minlength:2},S={type:"url",name:"imageUrl",placeholder:"Enlace a la imagen",isRequired:!0,maxlength:500,minlength:null};function k(t){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},k(t)}function C(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==k(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==k(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===k(i)?i:String(i)),o)}var i}var E=function(){function t(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._config=n,this._popupSelector=e,this._popup=null,this._isClosing=null,this._handleEscClose=this._handleEscClose.bind(this),this._handleClickClose=this._handleClickClose.bind(this)}var e,n;return e=t,(n=[{key:"_getTemplate",value:function(){return y.querySelector(this._config.popupTemplateSelector).cloneNode(!0).content}},{key:"_getModalBackdrop",value:function(){return this._popup.querySelector(this._config.popupBackdropSelector)}},{key:"_getCloseButton",value:function(){return this._popup.querySelector(this._config.popupCloseButtonSelector)}},{key:"_togglePopup",value:function(){this._popup.classList.contains(this._config.popupOpenedStateClass)?(this._popup.classList.add(this._config.popupClosedStateClass),this._popup.classList.remove(this._config.popupOpenedStateClass)):(this._popup.classList.add(this._config.popupOpenedStateClass),this._popup.classList.remove(this._config.popupClosedStateClass))}},{key:"_playClosingAnimation",value:function(){var t=this;this._isClosing=!0,setTimeout((function(){t._popup.remove(),t._isClosing=!1}),this._config.popupClosingTimeInMs)}},{key:"_closeOnClick",value:function(t){t.addEventListener("click",this._handleClickClose)}},{key:"_closeOnEscape",value:function(t){t.addEventListener("keydown",this._handleEscClose)}},{key:"_handleClickClose",value:function(t){"click"===t.type.toLowerCase()&&this.close()}},{key:"_handleEscClose",value:function(t){var e;"escape"===(null===(e=t.key)||void 0===e?void 0:e.toLowerCase())&&this.close()}},{key:"_isOpened",value:function(){return y.querySelector(this.popupSelector)}},{key:"getContentSelector",value:function(){return this._config.popupContentSelector}},{key:"_getContentContainer",value:function(){return this._popup.querySelector(this._config.popupContentSelector)}},{key:"_modifyContentContainer",value:function(t){this._getContentContainer().classList.add(t)}},{key:"open",value:function(){this._isOpened()||(this._togglePopup(),y.prepend(this._popup)),this._popup.focus()}},{key:"close",value:function(){this._isClosing||(this._togglePopup(),this._playClosingAnimation())}},{key:"setEventListeners",value:function(){this._closeOnClick(this._getModalBackdrop()),this._closeOnClick(this._getCloseButton()),this._closeOnEscape(this._popup)}},{key:"buildPopup",value:function(){this._popup=this._getTemplate().querySelector(this._popupSelector)}}])&&C(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}(),w=E;function L(t){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},L(t)}function P(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==L(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==L(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===L(i)?i:String(i)),o)}var i}function O(){return O="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var o=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=q(t)););return t}(t,e);if(o){var i=Object.getOwnPropertyDescriptor(o,e);return i.get?i.get.call(arguments.length<3?t:n):i.value}},O.apply(this,arguments)}function T(t,e){return T=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},T(t,e)}function I(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function q(t){return q=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},q(t)}var B=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&T(t,e)}(a,t);var e,n,o,r,u=(o=a,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=q(o);if(r){var n=q(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===L(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return I(t)}(this,t)});function a(t,e){var n,o=e.imageUrl,r=e.description;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(n=u.call(this,t,i))._imageUrl=o,n._description=r,n._image=null,n._caption=null,n.open=n.open.bind(I(n)),n}return e=a,(n=[{key:"_modifyContentContainer",value:function(){O(q(a.prototype),"_modifyContentContainer",this).call(this,i.popupModifierImageClass)}},{key:"_getImageTemplate",value:function(){return y.querySelector("#popupImage-template").cloneNode(!0).content}},{key:"_setImage",value:function(t,e){this._image=this._getImageComponent().querySelector(".popup__photo"),this._image.setAttribute("src",t),this._image.setAttribute("alt",e)}},{key:"_setCaption",value:function(t){this._caption=this._getImageComponent().querySelector(".popup__description"),this._caption.textContent=t}},{key:"_setImageComponent",value:function(){this._imageComponent||(this._imageComponent=this._getImageTemplate(),this._setImage(this._imageUrl,this._description),this._setCaption(this._description),this._modifyContentContainer(),this._getContentContainer().append(this._image),this._getContentContainer().append(this._caption))}},{key:"_getImageComponent",value:function(){return this._imageComponent}},{key:"open",value:function(){O(q(a.prototype),"open",this).call(this),this._setImageComponent()}},{key:"close",value:function(){O(q(a.prototype),"close",this).call(this)}}])&&P(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(w);function j(t){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},j(t)}function U(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==j(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==j(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===j(i)?i:String(i)),o)}var i}var R=function(){function t(n){var o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._form=n,this._config=o,this._inputValidationHandler=this._inputValidationHandler.bind(this),this._formPreSubmitValidationHandler=this._formPreSubmitValidationHandler.bind(this)}var n,o;return n=t,(o=[{key:"_formIsValid",value:function(){return Array.from(this._form.querySelectorAll(this._config.inputSelector)).every((function(t){return t.validity.valid}))}},{key:"_toggleButtonStatus",value:function(){var t=this._form.querySelector(this._config.submitButtonSelector);this._formIsValid()?t.classList.remove(this._config.inactiveButtonClass):t.classList.add(this._config.inactiveButtonClass)}},{key:"_inputValidationHandler",value:function(t){t.target.nextElementSibling.textContent=t.target.validationMessage,this._toggleButtonStatus()}},{key:"_formPreSubmitValidationHandler",value:function(t){var e,n="click"===t.type.toLowerCase()||"enter"===(null===(e=t.key)||void 0===e?void 0:e.toLowerCase());!this._formIsValid()&&n&&t.preventDefault()}},{key:"_getSubmitButton",value:function(){return this._form.querySelector(this._config.submitButtonSelector)}},{key:"_setFormValidationEventListeners",value:function(){this._form.addEventListener("input",this._inputValidationHandler),this._form.addEventListener("keydown",this._formPreSubmitValidationHandler),this._getSubmitButton().addEventListener("click",this._formPreSubmitValidationHandler)}},{key:"removeFormValidationEventListeners",value:function(){this._form.removeEventListener("input",this._inputValidationHandler),this._form.removeEventListener("keydown",this._formPreSubmitValidationHandler),this._getSubmitButton().removeEventListener("click",this._formPreSubmitValidationHandler)}},{key:"enableValidation",value:function(){this._toggleButtonStatus(),this._setFormValidationEventListeners(this._form,this._config)}}])&&U(n.prototype,o),Object.defineProperty(n,"prototype",{writable:!1}),t}(),A=R,D=function(){return sessionStorage.getItem("userId")},x=function(t,e){y.querySelector(t).addEventListener("click",e)};function H(t){return H="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},H(t)}function V(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==H(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==H(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===H(i)?i:String(i)),o)}var i}var F=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=e.baseUrl,this._headers=e.headers||null,this._body=e.body||null,this.get=this.get.bind(this),this.post=this.post.bind(this),this.put=this.put.bind(this),this.patch=this.patch.bind(this),this.delete=this.delete.bind(this),this._buildRequestOptions=this._buildRequestOptions.bind(this),this._getRequestOptions=this._getRequestOptions.bind(this),this._requestOptions={}}var e,n;return e=t,(n=[{key:"_setMethod",value:function(t){this._method=t}},{key:"_buildRequestOptions",value:function(){this._headers&&(this._requestOptions.headers=this._headers),this._body&&(this._requestOptions.body=JSON.stringify(this._body)),this._method&&(this._requestOptions.method=this._method)}},{key:"_getRequestOptions",value:function(){return this._requestOptions}},{key:"_doRequest",value:function(){return this._buildRequestOptions(),fetch(this._baseUrl,this._getRequestOptions()).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}))}},{key:"get",value:function(){return this._setMethod("GET"),this._doRequest()}},{key:"post",value:function(){return this._setMethod("POST"),this._doRequest()}},{key:"put",value:function(){return this._setMethod("PUT"),this._doRequest()}},{key:"patch",value:function(){return this._setMethod("PATCH"),this._doRequest()}},{key:"delete",value:function(){return this._setMethod("DELETE"),this._doRequest()}}])&&V(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}(),N=function(t,e,n,o){var i=new F({baseUrl:"".concat(t).concat(e),headers:{authorization:"".concat("f0b3f439-acc1-4da4-ab9f-34df2f51e340"),"Content-Type":"application/json"},body:o});return{GET:i.get,PUT:i.put,POST:i.post,PATCH:i.patch,DELETE:i.delete}[n]()};function M(t){return M="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},M(t)}function J(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==M(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==M(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===M(i)?i:String(i)),o)}var i}var G=function(){function t(e,n){var o=e.items,i=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._items=o,this._renderer=i,this._containerSelector=n}var e,n;return e=t,n=[{key:"renderer",value:function(){var t=this;this._items.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(t){(arguments.length>1&&void 0!==arguments[1]?arguments[1]:s)===s?document.querySelector(this._containerSelector).append(t):document.querySelector(this._containerSelector).prepend(t)}}],n&&J(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}(),z=G;function K(t){return K="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},K(t)}function Q(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==K(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==K(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===K(i)?i:String(i)),o)}var i}var W=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._avatarSelector=e}var e,n;return e=t,(n=[{key:"_getAvatarContainer",value:function(){return document.querySelector(this._avatarSelector)}},{key:"getAvatarImageUrl",value:function(){return this._getAvatarContainer().getAttribute("src")}},{key:"setAvatarImageUrl",value:function(t){this._getAvatarContainer().setAttribute("src",t)}}])&&Q(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function X(t){return X="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},X(t)}function Y(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==X(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==X(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===X(i)?i:String(i)),o)}var i}var Z=function(){function e(n,o,i,r,u){var a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:t;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),this._id=n,this._name=o,this._imageUrl=i,this._status=null,this._likesCounter=r,this._config=a,this._cardElement=null,this._popUpCard=null,this._handleCardClick=u,this.buildCard=this.buildCard.bind(this)}var n,o;return n=e,(o=[{key:"getCardElement",value:function(){return this._cardElement}},{key:"getCardId",value:function(){return this._id}},{key:"_setCardName",value:function(t){this._cardElement.querySelector(this._config.cardNameSelector).textContent=t}},{key:"_setCardImage",value:function(t,e){var n=this._cardElement.querySelector(this._config.cardImageSelector);n.setAttribute("alt",t),n.setAttribute("src",e)}},{key:"_setPopUpDescription",value:function(t){this._popUpCard.querySelector(this._config.popUpDescSelector).textContent=t}},{key:"setLikesCounter",value:function(t){this._cardElement.querySelector(this._config.likeCounterSelector).textContent=t}},{key:"_getTemplate",value:function(){return y.querySelector(this._config.cardTemplateSelector).content.cloneNode(!0)}},{key:"_getImage",value:function(){return this._cardElement.querySelector(this._config.cardImageSelector)}},{key:"_getLikeButton",value:function(){return this._cardElement.querySelector(this._config.likeButtonSelector)}},{key:"_getDeleteButton",value:function(){return this._cardElement.querySelector(this._config.deleteButtonSelector)}},{key:"_getPopUpTemplate",value:function(){return y.querySelector(this._config.popUpTemplateSelector).content.cloneNode(!0)}},{key:"_getPopUpImage",value:function(){return this._popUpCard.querySelector(this._config.popUpPhotoSelector)}},{key:"setLikeButtonHandler",value:function(t){var e=this;this._handleCardLike=t,this._getLikeButton().addEventListener("click",(function(t){e._handleCardLike(t,e)}))}},{key:"setDeleteButtonHandler",value:function(t){var e=this;this._handleCardDelete=t,this._getDeleteButton().addEventListener("click",(function(t){e._handleCardDelete(t,e)}))}},{key:"toggleDeleteButton",value:function(){this._getDeleteButton().hidden?this._getDeleteButton().hidden=!1:this._getDeleteButton().hidden=!0}},{key:"setStatus",value:function(t){this._status=t}},{key:"_setCardListeners",value:function(){this._getImage().addEventListener("click",this._handleCardClick),this._getDeleteButton().addEventListener("click",this._handleCardDelete)}},{key:"_removeCardListeners",value:function(){this._getImage().removeEventListener("click",this._handleCardClick)}},{key:"toggleLikeButton",value:function(){this._isLiked()?this._unlike():this._like()}},{key:"removeDeleteButton",value:function(){this._getDeleteButton().remove()}},{key:"_like",value:function(){this._status=this._config.likedStatus;var t=this._getLikeButton().querySelector(this._config.likeButtonIconSelector);t.classList.remove(this._config.notLikedButtonClass),t.classList.add(this._config.isLikedButtonClass)}},{key:"_unlike",value:function(){this._status=this._config.unlikedStatus,this._getLikeButton().setAttribute("value",!1);var t=this._getLikeButton().querySelector(this._config.likeButtonIconSelector);t.classList.remove(this._config.isLikedButtonClass),t.classList.add(this._config.notLikedButtonClass)}},{key:"_isLiked",value:function(){return this._status===this._config.likedStatus}},{key:"buildCard",value:function(){return this._cardElement=this._getTemplate().querySelector(this._config.cardSelector),this._setCardName(this._name),this._setCardImage(this._name,this._imageUrl),this.setLikesCounter(this._likesCounter),this._setCardListeners(),this._cardElement}}])&&Y(n.prototype,o),Object.defineProperty(n,"prototype",{writable:!1}),e}(),$=Z;function tt(t){return tt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},tt(t)}function et(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==tt(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==tt(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===tt(i)?i:String(i)),o)}var i}var nt=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._userNameSelector=e,this._userJobSelector=n}var e,n;return e=t,(n=[{key:"_getUserNameContainer",value:function(){return document.querySelector(this._userNameSelector)}},{key:"_getUserName",value:function(){return this._getUserNameContainer().textContent}},{key:"_getUserJobContainer",value:function(){return document.querySelector(this._userJobSelector)}},{key:"_getUserJob",value:function(){return this._getUserJobContainer().textContent}},{key:"getUserInfo",value:function(){return{userName:this._getUserName(),userJob:this._getUserJob()}}},{key:"setUserInfo",value:function(t,e){this._getUserNameContainer().textContent=t,this._getUserJobContainer().textContent=e}}])&&et(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function ot(t){return ot="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},ot(t)}function it(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==ot(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==ot(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===ot(i)?i:String(i)),o)}var i}function rt(){return rt="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var o=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=lt(t)););return t}(t,e);if(o){var i=Object.getOwnPropertyDescriptor(o,e);return i.get?i.get.call(arguments.length<3?t:n):i.value}},rt.apply(this,arguments)}function ut(t,e){return ut=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},ut(t,e)}function at(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function lt(t){return lt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},lt(t)}var st=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&ut(t,e)}(l,t);var e,o,r,u,a=(r=l,u=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=lt(r);if(u){var n=lt(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===ot(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return at(t)}(this,t)});function l(t,e,n){var o;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,l),(o=a.call(this,t,i))._submitEventHandler=e,o._submitEventHandler=o._submitEventHandler.bind(at(o)),o._postSubmitEventHandler=o._postSubmitEventHandler.bind(at(o)),o._formElement=n,o}return e=l,(o=[{key:"_getInputValues",value:function(){return this._formElement.inputValues}},{key:"_modifyContentContainer",value:function(){rt(lt(l.prototype),"_modifyContentContainer",this).call(this,i.popupModifierFormClass)}},{key:"setEventListeners",value:function(){rt(lt(l.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",this._submitEventHandler),this._formElement.addEventListener("submit",this._postSubmitEventHandler)}},{key:"_postSubmitEventHandler",value:function(t){this._formElement.removeEventListener("submit",this._submitEventHandler),this._formElement.removeEventListener("submit",this._postSubmitEventHandler),this.close()}},{key:"_setForm",value:function(){this._modifyContentContainer(),this._getContentContainer().append(this._formElement)}},{key:"_focusOnForm",value:function(){var t=this._formElement.querySelector(n.formInputSelector),e=this._formElement.querySelector(n.formButtonSelector);t.value?e.focus():t.focus()}},{key:"close",value:function(){rt(lt(l.prototype),"close",this).call(this),this._formElement.reset()}},{key:"open",value:function(){rt(lt(l.prototype),"open",this).call(this),this._setForm(),this._focusOnForm()}}])&&it(e.prototype,o),Object.defineProperty(e,"prototype",{writable:!1}),l}(w),ct=function(t){new W(r).setAvatarImageUrl(t)},pt=function(t,e){new nt(u,a).setUserInfo(t,e)},ft=function(t,e){var n=t.buildForm();new A(n).enableValidation();var o=new st(l,(function(n){e(n,t,o)}),n);o.buildPopup(),o.setEventListeners(),o.open()},ht=function(e,n,o){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"prepend",r=new z({items:e,renderer:function(e){var u,a,s,c=(u=e.link,a=e.name,(s=new B(l,{imageUrl:u,description:a})).buildPopup(),s.setEventListeners(),s),p=new $(e._id,e.name,e.link,e.likes.length,c.open),f=p.buildCard();p.setDeleteButtonHandler(n),p.setLikeButtonHandler(o),!function(t){return t.owner._id===D()}(e)&&p.removeDeleteButton(),p.setStatus(function(t){return t.likes.some((function(t){return t._id===D()}))}(e)?t.unlikedStatus:t.likedStatus),p.toggleLikeButton(),r.addItem(f,i)}},".destinations__list");r.renderer()};function mt(t){return mt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},mt(t)}function _t(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==mt(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==mt(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===mt(i)?i:String(i)),o)}var i}var yt=function(){function t(e,o){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:n;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._config=r,this._formTitle=e,this._buttonLabel=o,this._inputSetList=i,this._form=null}var e,o;return e=t,(o=[{key:"startLoader",value:function(){this._getSubmitButton().textContent="Guardando...",this._getSubmitButton().classList.add(this._config.submitLoadingClass)}},{key:"stopLoader",value:function(){this._getSubmitButton().textContent="Guardado"}},{key:"_getSubmitButton",value:function(){return this._form.querySelector(this._config.formButtonSelector)}},{key:"_getTemplate",value:function(){return y.querySelector(this._config.formTemplateSelector).cloneNode(!0).content}},{key:"_getInputsArea",value:function(){return this._form.querySelector(this._config.formInputsAreaSelector)}},{key:"_setTitle",value:function(t){this._form.querySelector(this._config.formTitleSelector).textContent=t}},{key:"_setButtonLabel",value:function(t){this._getSubmitButton().textContent=t}},{key:"_setInputs",value:function(t){var e=this;t.forEach((function(t){e._getInputsArea().append(t)}))}},{key:"getFormElement",value:function(){return this._form}},{key:"buildForm",value:function(){return this._form=this._getTemplate().querySelector(this._config.formSelector),this._setTitle(this._formTitle),this._setButtonLabel(this._buttonLabel),this._inputSetList&&this._setInputs(this._inputSetList),this._form}}])&&_t(e.prototype,o),Object.defineProperty(e,"prototype",{writable:!1}),t}(),dt=yt;function vt(t){return vt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},vt(t)}function bt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==vt(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==vt(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===vt(i)?i:String(i)),o)}var i}var gt=function(){function t(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:o;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._type=e.type,this._name=e.name,this._placeholder=e.placeholder,this._isRequired=e.isRequired,this._maxlength=e.maxlength,this._minlength=e.minlength,this._config=n,this._inputSet=null,this._input=null}var e,n;return e=t,(n=[{key:"_getTemplate",value:function(){return y.querySelector(this._config.inputTemplateSelector).cloneNode(!0).content}},{key:"_mapInputAttributes",value:function(){this._input.setAttribute("type",this._type),this._input.setAttribute("name",this._name),this._input.setAttribute("placeholder",this._placeholder),this._input.setAttribute("maxlength",this._maxlength),this._input.setAttribute("minlength",this._minlength),this._input.setAttribute("required",this._isRequired)}},{key:"setInputValue",value:function(t){this._input.value=t}},{key:"inputFocus",value:function(){this._input.focus(),this._input.select()}},{key:"buildFormInputSet",value:function(){return this._inputSet=this._getTemplate().querySelector(this._config.inputSetSelector),this._input=this._inputSet.querySelector(this._config.inputSelector),this._mapInputAttributes(),this._inputSet}}])&&bt(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}(),St=gt,kt=function(t,e,n){var o;t.preventDefault(),e.startLoader(),(o=e.getFormElement().avatarUrl.value,N(c,"/users/me/avatar",m,{avatar:o}).then((function(t){return t})).catch((function(t){console.log(t)}))).then((function(t){ct(t.avatar),e.stopLoader(),n.close()}))},Ct=function(t,e,n){t.preventDefault(),e.startLoader();var o,i,r=e.getFormElement();(o=r.name.value,i=r.aboutMe.value,N(c,p,m,{name:o,about:i}).then((function(t){return t})).catch((function(t){console.log(t)}))).then((function(t){pt(t.name,t.about),e.stopLoader(),n.close()}))},Et=function(t,e,n){t.preventDefault(),e.startLoader();var o,i,r=e.getFormElement();(o=r.title.value,i=r.imageUrl.value,N(c,f,"POST",{name:o,link:i}).then((function(t){return t})).catch((function(t){console.log(t)}))).then((function(t){ht([t],wt,Pt),e.stopLoader(),n.close()}))},wt=function(t,e){t.preventDefault();var n=new dt("¿Estás seguro?","Sí");ft(n,(function(t,n,o){Lt(t,e,n,o)}))},Lt=function(t,e,n,o){var i;t.preventDefault(),n.startLoader(),(i=e.getCardId(),N(c,"".concat(f,"/").concat(i),_)).then((function(){var t;n.stopLoader(),(t=e.getCardElement())&&t.remove(),o.close()}))},Pt=function(t,e){var n;"liked"===e._status?(n=e.getCardId(),N(c,"".concat(h,"/").concat(n),_)).then((function(t){e.setLikesCounter(t.likes.length)})).catch((function(t){console.log(t)})):function(t){return N(c,"".concat(h,"/").concat(t),"PUT")}(e.getCardId()).then((function(t){e.setLikesCounter(t.likes.length)})).catch((function(t){console.log(t)})),e.toggleLikeButton()};N(c,p,"GET").then((function(t){var e;e=t._id,sessionStorage.setItem("userId",e),pt(t.name,t.about),ct(t.avatar)})).catch((function(t){console.log(t)})),N(c,f,"GET").then((function(t){ht(t,wt,Pt,s)})).catch((function(t){console.log(t)})),x(".button_action_edit.button_location_profile-info",(function(){var t=function(){var t=[],e=new St(v),n=new St(b);t.push(e.buildFormInputSet(),n.buildFormInputSet());var o=new nt(u,a);return e.setInputValue(o.getUserInfo().userName),n.setInputValue(o.getUserInfo().userJob),new dt("Editar Perfil","Guardar",t)}();ft(t,Ct)})),x(".button_action_add",(function(){var t,e,n,o=(t=[],e=new St(g),n=new St(S),t.push(e.buildFormInputSet(),n.buildFormInputSet()),new dt("Nuevo Lugar","Guardar",t));ft(o,Et)})),x(".button_action_edit.button_location_profile-avatar",(function(){var t=function(){var t=[],e=new St(d);t.push(e.buildFormInputSet());var n=new W(r);return e.setInputValue(n.getAvatarImageUrl()),new dt("Cambiar foto de perfil","Guardar",t)}();ft(t,kt)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,