!function(){"use strict";var t={cardTemplateSelector:"#destinations__item-template",cardSelector:".destinations__item",cardNameSelector:".destination__name",cardImageSelector:".destination__photo",likeButtonSelector:".button_action_like",likeButtonIconSelector:".button_action_like .button__icon",likeCounterSelector:".like .like__counter",deleteButtonSelector:".button__icon_action_delete",popUpTemplateSelector:"#destination-popup-template",popUpSelector:".destination-popup",popUpPhotoSelector:".destination-popup__photo",popUpDescSelector:".destination-popup__description",notLikedButtonClass:"button__icon_action_like",isLikedButtonClass:"button__icon_action_liked",likedStatus:"liked",unlikedStatus:"unliked"},e={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".button_location_form",inactiveButtonClass:"button_status_inactive",inputErrorClass:"form__input_status_error",errorClass:"form__input-error"},n={formTemplateSelector:"#form-template",formSelector:".form",formTitleSelector:".form__title",formButtonSelector:".button",formInputTemplateSelector:"#form__input-template",formInputSetSelector:".form__input-set",formInputSelector:".form__input",formInputsAreaSelector:".form__inputs"},o={inputTemplateSelector:"#form__input-template",inputSetSelector:".form__input-set",inputSelector:".form__input"},i={popupTemplateSelector:"#popup-template",popupSelector:".popup",popupContentSelector:".popup__content",popupBackdropSelector:".popup__backdrop",popupCloseButtonSelector:".button__icon_action_close",popupModifierFormClass:"popup__content_type_form",popupModifierImageClass:"popup__content_type_image",popupClosedStateClass:"popup_state_closed",popupOpenedStateClass:"popup_state_opened",popupClosingTimeInMs:"300",formClass:"form"},r=".profile__avatar",u=".profile__name",a=".profile__occupation",l=".popup",s="append",c="https://around.nomoreparties.co/v1/web_es_10",p="/users/me",f="/cards",h="/cards/likes",_="PATCH",m="DELETE",y=document.querySelector(".page"),d={type:"url",name:"avatarUrl",placeholder:"Enlace a la imagen",isRequired:!0,maxlength:500,minlength:null},v={type:"text",name:"name",placeholder:"Nombre",isRequired:!0,maxlength:40,minlength:2},b={type:"text",name:"aboutMe",placeholder:"Acerca de mí",isRequired:!0,maxlength:200,minlength:2},g={type:"text",name:"title",placeholder:"Título",isRequired:!0,maxlength:30,minlength:2},S={type:"url",name:"imageUrl",placeholder:"Enlace a la imagen",isRequired:!0,maxlength:500,minlength:null};function k(t){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},k(t)}function C(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==k(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==k(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===k(i)?i:String(i)),o)}var i}var w=function(){function t(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._config=n,this._popupSelector=e,this._popup=null,this._isClosing=null,this._handleEscClose=this._handleEscClose.bind(this),this._handleClickClose=this._handleClickClose.bind(this)}var e,n;return e=t,(n=[{key:"_getTemplate",value:function(){return y.querySelector(this._config.popupTemplateSelector).cloneNode(!0).content}},{key:"_getModalBackdrop",value:function(){return this._popup.querySelector(this._config.popupBackdropSelector)}},{key:"_getCloseButton",value:function(){return this._popup.querySelector(this._config.popupCloseButtonSelector)}},{key:"_togglePopup",value:function(){this._popup.classList.contains(this._config.popupOpenedStateClass)?(this._popup.classList.add(this._config.popupClosedStateClass),this._popup.classList.remove(this._config.popupOpenedStateClass)):(this._popup.classList.add(this._config.popupOpenedStateClass),this._popup.classList.remove(this._config.popupClosedStateClass))}},{key:"_playClosingAnimation",value:function(){var t=this;this._isClosing=!0,setTimeout((function(){t._popup.remove(),t._isClosing=!1}),this._config.popupClosingTimeInMs)}},{key:"_closeOnClick",value:function(t){t.addEventListener("click",this._handleClickClose)}},{key:"_closeOnEscape",value:function(t){t.addEventListener("keydown",this._handleEscClose)}},{key:"_handleClickClose",value:function(t){"click"===t.type.toLowerCase()&&this.close()}},{key:"_handleEscClose",value:function(t){var e;"escape"===(null===(e=t.key)||void 0===e?void 0:e.toLowerCase())&&this.close()}},{key:"_isOpened",value:function(){return y.querySelector(this.popupSelector)}},{key:"getContentSelector",value:function(){return this._config.popupContentSelector}},{key:"_getContentContainer",value:function(){return this._popup.querySelector(this._config.popupContentSelector)}},{key:"_modifyContentContainer",value:function(t){this._getContentContainer().classList.add(t)}},{key:"open",value:function(){this._isOpened()||(this._togglePopup(),y.prepend(this._popup)),this._popup.focus()}},{key:"close",value:function(){this._isClosing||(this._togglePopup(),this._playClosingAnimation())}},{key:"setEventListeners",value:function(){this._closeOnClick(this._getModalBackdrop()),this._closeOnClick(this._getCloseButton()),this._closeOnEscape(this._popup)}},{key:"buildPopup",value:function(){this._popup=this._getTemplate().querySelector(this._popupSelector)}}])&&C(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}(),E=w;function P(t){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},P(t)}function L(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==P(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==P(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===P(i)?i:String(i)),o)}var i}function O(){return O="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var o=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=q(t)););return t}(t,e);if(o){var i=Object.getOwnPropertyDescriptor(o,e);return i.get?i.get.call(arguments.length<3?t:n):i.value}},O.apply(this,arguments)}function T(t,e){return T=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},T(t,e)}function j(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function q(t){return q=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},q(t)}var I=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&T(t,e)}(a,t);var e,n,o,r,u=(o=a,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=q(o);if(r){var n=q(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===P(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return j(t)}(this,t)});function a(t,e,n){var o;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(o=u.call(this,t,i))._submitEventHandler=e,o._submitEventHandler=o._submitEventHandler.bind(j(o)),o._postSubmitEventHandler=o._postSubmitEventHandler.bind(j(o)),o._form=n,o}return e=a,(n=[{key:"_getInputValues",value:function(){return this._form.inputValues}},{key:"_modifyContentContainer",value:function(){O(q(a.prototype),"_modifyContentContainer",this).call(this,i.popupModifierFormClass)}},{key:"setEventListeners",value:function(){O(q(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",this._submitEventHandler),this._form.addEventListener("submit",this._postSubmitEventHandler)}},{key:"_postSubmitEventHandler",value:function(){this._form.removeEventListener("submit",this._submitEventHandler),this._form.removeEventListener("submit",this._postSubmitEventHandler),this.close()}},{key:"_setForm",value:function(){this._modifyContentContainer(),this._getContentContainer().append(this._form)}},{key:"close",value:function(){O(q(a.prototype),"close",this).call(this),this._form.reset()}},{key:"open",value:function(){O(q(a.prototype),"open",this).call(this),this._setForm()}}])&&L(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(E);function B(t){return B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},B(t)}function U(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==B(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==B(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===B(i)?i:String(i)),o)}var i}function R(){return R="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var o=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=H(t)););return t}(t,e);if(o){var i=Object.getOwnPropertyDescriptor(o,e);return i.get?i.get.call(arguments.length<3?t:n):i.value}},R.apply(this,arguments)}function A(t,e){return A=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},A(t,e)}function x(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function H(t){return H=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},H(t)}var V=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&A(t,e)}(a,t);var e,n,o,r,u=(o=a,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=H(o);if(r){var n=H(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===B(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return x(t)}(this,t)});function a(t,e){var n,o=e.imageUrl,r=e.description;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(n=u.call(this,t,i))._imageUrl=o,n._description=r,n._image=null,n._caption=null,n.open=n.open.bind(x(n)),n}return e=a,(n=[{key:"_modifyContentContainer",value:function(){R(H(a.prototype),"_modifyContentContainer",this).call(this,i.popupModifierImageClass)}},{key:"_getImageTemplate",value:function(){return y.querySelector("#popupImage-template").cloneNode(!0).content}},{key:"_setImage",value:function(t,e){this._image=this._getImageComponent().querySelector(".popup__photo"),this._image.setAttribute("src",t),this._image.setAttribute("alt",e)}},{key:"_setCaption",value:function(t){this._caption=this._getImageComponent().querySelector(".popup__description"),this._caption.textContent=t}},{key:"_setImageComponent",value:function(){this._imageComponent||(this._imageComponent=this._getImageTemplate(),this._setImage(this._imageUrl,this._description),this._setCaption(this._description),this._modifyContentContainer(),this._getContentContainer().append(this._image),this._getContentContainer().append(this._caption))}},{key:"_getImageComponent",value:function(){return this._imageComponent}},{key:"open",value:function(){R(H(a.prototype),"open",this).call(this),this._setImageComponent()}},{key:"close",value:function(){R(H(a.prototype),"close",this).call(this)}}])&&U(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(E);function N(t){return N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},N(t)}function D(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==N(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==N(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===N(i)?i:String(i)),o)}var i}var F=function(){function t(n){var o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._form=n,this._config=o,this._inputValidationHandler=this._inputValidationHandler.bind(this),this._formPreSubmitValidationHandler=this._formPreSubmitValidationHandler.bind(this)}var n,o;return n=t,(o=[{key:"_formIsValid",value:function(){return Array.from(this._form.querySelectorAll(this._config.inputSelector)).every((function(t){return t.validity.valid}))}},{key:"_toggleButtonStatus",value:function(){var t=this._form.querySelector(this._config.submitButtonSelector);this._formIsValid()?t.classList.remove(this._config.inactiveButtonClass):t.classList.add(this._config.inactiveButtonClass)}},{key:"_inputValidationHandler",value:function(t){t.target.nextElementSibling.textContent=t.target.validationMessage,this._toggleButtonStatus()}},{key:"_formPreSubmitValidationHandler",value:function(t){var e,n="click"===t.type.toLowerCase()||"enter"===(null===(e=t.key)||void 0===e?void 0:e.toLowerCase());!this._formIsValid()&&n&&t.preventDefault()}},{key:"_getSubmitButton",value:function(){return this._form.querySelector(this._config.submitButtonSelector)}},{key:"_setFormValidationEventListeners",value:function(){this._form.addEventListener("input",this._inputValidationHandler),this._form.addEventListener("keydown",this._formPreSubmitValidationHandler),this._getSubmitButton().addEventListener("click",this._formPreSubmitValidationHandler)}},{key:"removeFormValidationEventListeners",value:function(){this._form.removeEventListener("input",this._inputValidationHandler),this._form.removeEventListener("keydown",this._formPreSubmitValidationHandler),this._getSubmitButton().removeEventListener("click",this._formPreSubmitValidationHandler)}},{key:"enableValidation",value:function(){this._toggleButtonStatus(),this._setFormValidationEventListeners(this._form,this._config)}}])&&D(n.prototype,o),Object.defineProperty(n,"prototype",{writable:!1}),t}(),M=F,J=function(t){new M(t).enableValidation()},G=function(t,e){var n=new I(l,e,t);return n.buildPopup(),n.setEventListeners(),n},z=function(t,e){y.querySelector(t).addEventListener("click",e)};function K(t){return K="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},K(t)}function Q(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==K(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==K(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===K(i)?i:String(i)),o)}var i}var W=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=e.baseUrl,this._headers=e.headers||null,this._body=e.body||null,this.get=this.get.bind(this),this.post=this.post.bind(this),this.put=this.put.bind(this),this.patch=this.patch.bind(this),this.delete=this.delete.bind(this),this._buildRequestOptions=this._buildRequestOptions.bind(this),this._getRequestOptions=this._getRequestOptions.bind(this),this._requestOptions={}}var e,n;return e=t,(n=[{key:"_setMethod",value:function(t){this._method=t}},{key:"_buildRequestOptions",value:function(){this._headers&&(this._requestOptions.headers=this._headers),this._body&&(this._requestOptions.body=JSON.stringify(this._body)),this._method&&(this._requestOptions.method=this._method)}},{key:"_getRequestOptions",value:function(){return this._requestOptions}},{key:"_doRequest",value:function(){return this._buildRequestOptions(),fetch(this._baseUrl,this._getRequestOptions()).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}))}},{key:"get",value:function(){return this._setMethod("GET"),this._doRequest()}},{key:"post",value:function(){return this._setMethod("POST"),this._doRequest()}},{key:"put",value:function(){return this._setMethod("PUT"),this._doRequest()}},{key:"patch",value:function(){return this._setMethod("PATCH"),this._doRequest()}},{key:"delete",value:function(){return this._setMethod("DELETE"),this._doRequest()}}])&&Q(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}(),X=function(t,e,n,o){var i=new W({baseUrl:"".concat(t).concat(e),headers:{authorization:"".concat("f0b3f439-acc1-4da4-ab9f-34df2f51e340"),"Content-Type":"application/json"},body:o});return{GET:i.get,PUT:i.put,POST:i.post,PATCH:i.patch,DELETE:i.delete}[n]()};function Y(t){return Y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Y(t)}function Z(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==Y(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==Y(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===Y(i)?i:String(i)),o)}var i}var $=function(){function t(e,n){var o=e.items,i=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._items=o,this._renderer=i,this._containerSelector=n}var e,n;return e=t,n=[{key:"renderer",value:function(){var t=this;this._items.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(t){(arguments.length>1&&void 0!==arguments[1]?arguments[1]:s)===s?document.querySelector(this._containerSelector).append(t):document.querySelector(this._containerSelector).prepend(t)}}],n&&Z(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}(),tt=$;function et(t){return et="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},et(t)}function nt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==et(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==et(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===et(i)?i:String(i)),o)}var i}var ot=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._avatarSelector=e}var e,n;return e=t,(n=[{key:"_getAvatarContainer",value:function(){return document.querySelector(this._avatarSelector)}},{key:"getAvatarImageUrl",value:function(){return this._getAvatarContainer().getAttribute("src")}},{key:"setAvatarImageUrl",value:function(t){this._getAvatarContainer().setAttribute("src",t)}}])&&nt(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function it(t){return it="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},it(t)}function rt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==it(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==it(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===it(i)?i:String(i)),o)}var i}var ut=function(){function e(n,o,i,r,u,a){var l=arguments.length>6&&void 0!==arguments[6]?arguments[6]:t;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),this._id=n,this._name=o,this._imageUrl=i,this._status=null,this._likesCounter=r,this._config=l,this._cardElement=null,this._popUpCard=null,this._handleCardClick=u,this._handleCardDelete=a,this._getLikeButton=this._getLikeButton.bind(this),this._handleLikeButtonClick=this._handleLikeButtonClick.bind(this),this.buildCard=this.buildCard.bind(this)}var n,o;return n=e,(o=[{key:"_setCardId",value:function(t){this._cardElement.setAttribute("id","id_".concat(t))}},{key:"_setCardName",value:function(t){this._cardElement.querySelector(this._config.cardNameSelector).textContent=t}},{key:"_setCardImage",value:function(t,e){var n=this._cardElement.querySelector(this._config.cardImageSelector);n.setAttribute("alt",t),n.setAttribute("src",e)}},{key:"_setPopUpDescription",value:function(t){this._popUpCard.querySelector(this._config.popUpDescSelector).textContent=t}},{key:"setLikesCounter",value:function(t){this._cardElement.querySelector(this._config.likeCounterSelector).textContent=t}},{key:"_getTemplate",value:function(){return y.querySelector(this._config.cardTemplateSelector).content.cloneNode(!0)}},{key:"_getImage",value:function(){return this._cardElement.querySelector(this._config.cardImageSelector)}},{key:"_getLikeButton",value:function(){return this._cardElement.querySelector(this._config.likeButtonSelector)}},{key:"_getDeleteButton",value:function(){return this._cardElement.querySelector(this._config.deleteButtonSelector)}},{key:"_getPopUpTemplate",value:function(){return y.querySelector(this._config.popUpTemplateSelector).content.cloneNode(!0)}},{key:"_getPopUpImage",value:function(){return this._popUpCard.querySelector(this._config.popUpPhotoSelector)}},{key:"setLikeButtonHandler",value:function(t){var e=this;this._handleCardLike=t,this._getLikeButton().addEventListener("click",(function(t){e._handleCardLike(t,e)}))}},{key:"setStatus",value:function(t){this._status=t}},{key:"_setCardListeners",value:function(){this._getImage().addEventListener("click",this._handleCardClick),this._getDeleteButton().addEventListener("click",this._handleCardDelete)}},{key:"_removeCardListeners",value:function(){this._getImage().removeEventListener("click",this._handleCardClick),this._getLikeButton().removeEventListener("click",this._handleLikeButtonClick),this._getDeleteButton().removeEventListener("click",this._handleCardDelete)}},{key:"toggleLikeButton",value:function(){this._isLiked()?this._unlike():this._like()}},{key:"_like",value:function(){this._status=this._config.likedStatus;var t=this._getLikeButton().querySelector(this._config.likeButtonIconSelector);t.classList.remove(this._config.notLikedButtonClass),t.classList.add(this._config.isLikedButtonClass)}},{key:"_unlike",value:function(){this._status=this._config.unlikedStatus,this._getLikeButton().setAttribute("value",!1);var t=this._getLikeButton().querySelector(this._config.likeButtonIconSelector);t.classList.remove(this._config.isLikedButtonClass),t.classList.add(this._config.notLikedButtonClass)}},{key:"_isLiked",value:function(){return this._status===this._config.likedStatus}},{key:"_handleLikeButtonClick",value:function(t){this._handleCardLike(t),this.toggleLikeButton()}},{key:"buildCard",value:function(){return this._cardElement=this._getTemplate().querySelector(this._config.cardSelector),this._setCardId(this._id),this._setCardName(this._name),this._setCardImage(this._name,this._imageUrl),this.setLikesCounter(this._likesCounter),this._setCardListeners(),this._cardElement}}])&&rt(n.prototype,o),Object.defineProperty(n,"prototype",{writable:!1}),e}(),at=ut;function lt(t){return lt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},lt(t)}function st(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==lt(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==lt(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===lt(i)?i:String(i)),o)}var i}var ct=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._userNameSelector=e,this._userJobSelector=n}var e,n;return e=t,(n=[{key:"_getUserNameContainer",value:function(){return document.querySelector(this._userNameSelector)}},{key:"_getUserName",value:function(){return this._getUserNameContainer().textContent}},{key:"_getUserJobContainer",value:function(){return document.querySelector(this._userJobSelector)}},{key:"_getUserJob",value:function(){return this._getUserJobContainer().textContent}},{key:"getUserInfo",value:function(){return{userName:this._getUserName(),userJob:this._getUserJob()}}},{key:"setUserInfo",value:function(t,e){this._getUserNameContainer().textContent=t,this._getUserJobContainer().textContent=e}}])&&st(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}(),pt=function(t){new ot(r).setAvatarImageUrl(t)},ft=function(t,e){new ct(u,a).setUserInfo(t,e)},ht=function(e,n,o){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"prepend",r=new tt({items:e,renderer:function(e){var u,a,s,c=(u=e.link,a=e.name,(s=new V(l,{imageUrl:u,description:a})).buildPopup(),s.setEventListeners(),s),p=new at(e._id,e.name,e.link,e.likes.length,c.open,n),f=p.buildCard();p.setLikeButtonHandler(o),p.setStatus(function(t){return t.likes.some((function(t){return t._id===sessionStorage.getItem("userId")}))}(e)?t.unlikedStatus:t.likedStatus),p.toggleLikeButton(),r.addItem(f,i)}},".destinations__list");r.renderer()};function _t(t){return _t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_t(t)}function mt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==_t(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==_t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===_t(i)?i:String(i)),o)}var i}var yt=function(){function t(e,o){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:n;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._config=r,this._formTitle=e,this._buttonLabel=o,this._inputSetList=i,this._form=null}var e,o;return e=t,(o=[{key:"_getTemplate",value:function(){return y.querySelector(this._config.formTemplateSelector).cloneNode(!0).content}},{key:"_getInputsArea",value:function(){return this._form.querySelector(this._config.formInputsAreaSelector)}},{key:"_setTitle",value:function(t){this._form.querySelector(this._config.formTitleSelector).textContent=t}},{key:"_setButtonLabel",value:function(t){this._form.querySelector(this._config.formButtonSelector).textContent=t}},{key:"_setInputs",value:function(t){var e=this;t.forEach((function(t){e._getInputsArea().append(t)}))}},{key:"buildForm",value:function(){return this._form=this._getTemplate().querySelector(this._config.formSelector),this._setTitle(this._formTitle),this._setButtonLabel(this._buttonLabel),this._inputSetList&&this._setInputs(this._inputSetList),this._form}}])&&mt(e.prototype,o),Object.defineProperty(e,"prototype",{writable:!1}),t}(),dt=yt;function vt(t){return vt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},vt(t)}function bt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==vt(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==vt(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===vt(i)?i:String(i)),o)}var i}var gt=function(){function t(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:o;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._type=e.type,this._name=e.name,this._placeholder=e.placeholder,this._isRequired=e.isRequired,this._maxlength=e.maxlength,this._minlength=e.minlength,this._config=n,this._inputSet=null,this._input=null}var e,n;return e=t,(n=[{key:"_getTemplate",value:function(){return y.querySelector(this._config.inputTemplateSelector).cloneNode(!0).content}},{key:"_mapInputAttributes",value:function(){this._input.setAttribute("type",this._type),this._input.setAttribute("name",this._name),this._input.setAttribute("placeholder",this._placeholder),this._input.setAttribute("maxlength",this._maxlength),this._input.setAttribute("minlength",this._minlength),this._input.setAttribute("required",this._isRequired)}},{key:"setInputValue",value:function(t){this._input.value=t}},{key:"inputFocus",value:function(){this._input.focus(),this._input.select()}},{key:"buildFormInputSet",value:function(){return this._inputSet=this._getTemplate().querySelector(this._config.inputSetSelector),this._input=this._inputSet.querySelector(this._config.inputSelector),this._mapInputAttributes(),this._inputSet}}])&&bt(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}(),St=gt,kt=function(t){var e;t.preventDefault(),(e=t.target.avatarUrl.value,X(c,"/users/me/avatar",_,{avatar:e}).then((function(t){return t})).catch((function(t){console.log(t)}))).then((function(t){pt(t.avatar)}))},Ct=function(t){t.preventDefault();var e,n,o=t.target;(e=o.name.value,n=o.aboutMe.value,X(c,p,_,{name:e,about:n}).then((function(t){return t})).catch((function(t){console.log(t)}))).then((function(t){ft(t.name,t.about)}))},wt=function(t){t.preventDefault();var e,n,o,i=t.target;(e={link:i.imageUrl.value,name:i.title.value},n=e.name,o=e.link,X(c,f,"POST",{name:n,link:o}).then((function(t){return t})).catch((function(t){console.log(t)}))).then((function(t){ht([t],Et,Pt)}))},Et=function(e){var n=e.target.closest(t.cardSelector),o=n.id.replace(/^id_/,""),i=new dt("¿Estás seguro?","Sí").buildForm(),r=G(i,(function(t){t.preventDefault(),function(t){return X(c,"".concat(f,"/").concat(t),m)}(o).then((function(){var t;(t=n)&&t.remove()}))}));r.open()},Pt=function(t,e){var n;"liked"===e._status?(n=e._id,X(c,"".concat(h,"/").concat(n),m)).then((function(t){e.setLikesCounter(t.likes.length)})):function(t){return X(c,"".concat(h,"/").concat(t),"PUT")}(e._id).then((function(t){e.setLikesCounter(t.likes.length)})),e.toggleLikeButton()};X(c,p,"GET").then((function(t){var e;e=t._id,sessionStorage.setItem("userId",e),ft(t.name,t.about),pt(t.avatar)})).catch((function(t){console.log(t)})),X(c,f,"GET").then((function(t){ht(t,Et,Pt,s)})).catch((function(t){console.log(t)})),z(".button_action_edit.button_location_profile-info",(function(){var t=function(){var t=[],e=new St(v),n=new St(b);t.push(e.buildFormInputSet(),n.buildFormInputSet());var o=new ct(u,a);return e.setInputValue(o.getUserInfo().userName),n.setInputValue(o.getUserInfo().userJob),new dt("Editar Perfil","Guardar",t).buildForm()}();J(t),G(t,Ct).open()})),z(".button_action_add",(function(){var t,e,n,o=(t=[],e=new St(g),n=new St(S),t.push(e.buildFormInputSet(),n.buildFormInputSet()),new dt("Nuevo Lugar","Guardar",t).buildForm());J(o),G(o,wt).open()})),z(".button_action_edit.button_location_profile-avatar",(function(){var t=function(){var t=[],e=new St(d);t.push(e.buildFormInputSet());var n=new ot(r);return e.setInputValue(n.getAvatarImageUrl()),new dt("Cambiar foto de perfil","Guardar",t).buildForm()}();J(t),G(t,kt).open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,